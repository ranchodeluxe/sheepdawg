---
- name: create IAM users
  iam:
    iam_type: user
    name: "{{ iam_user.name }}"
    state: present
    password: "{{ iam_user.password }}"
    access_key_state: create
  register: iam_user_output
- debug: msg="{{ iam_user_output }}"

- name: save access keys
  local_action:
    module: copy
    content: "{{ iam_user_output.results[0].user_meta }}"
    dest: "./iam_{{ iam_user_output.results[0].user_meta.created_user.user_id }}_user_meta.ec2"
  when: iam_user_output.results[0].user_meta
  failed_when: "{{ True==False }}" # never
  ignore_errors: yes

- name: add AdminAccess policy for new user
  iam_policy:
    iam_type: user
    iam_name: "{{ iam_user.name }}"
    region: "{{ region }}"
    policy_name: "administrator_access"
    state: present
    policy_json: "{{ lookup( 'template', {{ iam_user.policy }} ) }}"
  register: policy_output
- debug: msg="{{ policy_output }}"

# we'll need to create this role differently here
# because Ansible by default only creates trust policies
# for roles that are ec2-centric
# https://github.com/ansible/ansible-modules-core/issues/2468
# so we call out the

#- name: create IAM role
#  local_action: shell aws iam create-role --role-name="{{iam_lambda_execution_roles[0].name}}" --assume-role-policy-document="file://{{role_path}}/files/policies/lambda-s3-execution-trust-policy.json"
#  register: create_role_w_trust_response
#  ignore_errors: yes
#- debug: msg="{{ create_role_w_trust_response }}"
#
#- name: create role policy LambdaExecutionRole
#  iam_policy:
#    iam_type: role
#    iam_name: "{{ item.name }}"
#    region: "{{ region }}"
#    policy_name: "{{ item.name }}"
#    state: present
#    policy_json: "{{ lookup( 'template', 'files/policies/lambda-s3-execution-role.json.j2') }}"
#  with_items: iam_lambda_execution_roles
#  register: policy_output
#- debug: msg="{{ policy_output }}"